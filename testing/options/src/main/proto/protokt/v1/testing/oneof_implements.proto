/*
 * Copyright (c) 2019 Toast, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

syntax = "proto3";

package protokt.v1.testing;

import "protokt/v1/protokt.proto";

option java_package = "com.toasttab.protokt.v1.testing";

message ImplementsOneof1 {
  option (.protokt.v1.class).implements = "OneofModel";

  bytes id = 1 [
    (.protokt.v1.property).wrap = "Id"
  ];
}

message ImplementsOneof2 {
  option (.protokt.v1.class).implements = "OneofModel";

  bytes id = 1 [
    (.protokt.v1.property).wrap = "Id"
  ];
}

message ContainsOneofThatImplements {
  oneof implementing_oneof {
    option (.protokt.v1.oneof).implements = "OneofModel";

    ImplementsOneof1 implements_one = 1;
    ImplementsOneof2 implements_two = 2;
  }

  // name conflict
  oneof OneofModel {
    option (.protokt.v1.oneof).implements = "OneofModel";

    ImplementsOneof1 implements_one_with_name_conflict = 3;
  }

  oneof OneofModelFullyQualified {
    option (.protokt.v1.oneof).implements = "protokt.v1.testing.OneofModel";

    ImplementsOneof1 implements_one_with_full_qualification = 4;
  }
}
