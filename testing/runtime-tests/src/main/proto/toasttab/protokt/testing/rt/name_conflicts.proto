/*
 * Copyright (c) 2020 Toast Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

syntax = "proto3";

package toasttab.protokt.testing.rt;

import "toasttab/protokt/testing/rt/other/model.proto";
import "google/protobuf/any.proto";
import "google/protobuf/struct.proto";

message HasMapAndValueField {
  double value = 1;
  map<string, string> map = 2;
}

message Constant {
  oneof constant_kind {
    google.protobuf.NullValue null_value = 1;
  }
}

message Model {
  other.Model model = 1;
}

message ContainsUnit {
  enum Unit {
    first = 0;
  }

  Unit unit = 1;
}

message Unit {
  ContainsUnit unit = 1;
}

message ContainsFloat {
  oneof type {
    string float = 1;
  }
}

message ContainsAny {
  google.protobuf.Any any = 1;
  map<int32, google.protobuf.Any> map = 2;
}

message NestedEnum {
  message Nested {
    enum Enum {
      STRING = 0;
    }
  }

  Nested.Enum enum = 1;
}

message UseKeyWords {
  oneof type {
    string int32 = 1;
    string int64 = 2;
    string uint32 = 3;
    string uint64 = 4;
    string sint32 = 5;
    string sint64 = 6;
    string fixed32 = 7;
    string fixed64 = 8;
    string sfixed32 = 9;
    string sfixed64 = 10;
    string bytes = 11;
  }

  int32 an_int32 = 12;
  int64 an_int64 = 13;
  uint32 a_uint32 = 14;
  uint64 a_uint64 = 15;
  sint32 a_sint32 = 16;
  sint64 a_sint64 = 17;
  fixed32 a_fixed32 = 18;
  fixed64 a_fixed64 = 19;
  sfixed32 a_sfixed32 = 20;
  sfixed64 a_sfixed64 = 21;
  bytes some_bytes = 22;
}
