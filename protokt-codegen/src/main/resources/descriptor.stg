/*
 * Copyright (c) 2021 Toast Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

descriptor(fileDescriptorObjectName, parts) ::= <<
object <fileDescriptorObjectName> {
    val descriptor by lazy {
        val descriptorData = arrayOf(
            <parts:{lines | <lines:{l | "<l>"}; separator=" +\n">}; separator=",\n">
        )

        val descriptorBytes = ByteArray(descriptorData.sumBy { it.length })
        var idx = 0
        descriptorData.forEach { part ->
            part.forEach { char ->
                descriptorBytes[idx++] = char.toByte()
            }
        }

        FileDescriptorProto.deserialize(descriptorBytes)
    }
}

>>
