version: 2.1

parameters:
  benchmarks:
    type: boolean
    default: false

executors:
  builder:
    working_directory: ~/code
    docker:
      - image: cimg/openjdk:11.0
    environment:
      JAVA_OPTS: "-XX:MaxRAMPercentage=50"
      GRADLE_OPTS: "-Dorg.gradle.daemon=false"

commands:
  read_cache:
    steps:
      - restore_cache:
          key: v1-gradle-wrapper-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
      - restore_cache:
          key: v1-gradle-cache-{{ checksum "build.gradle.kts" }}

  write_cache:
    steps:
      - save_cache:
          paths:
            - ~/.gradle/wrapper
          key: v1-gradle-wrapper-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
      - save_cache:
          paths:
            - ~/.gradle/caches
          key: v1-gradle-cache-{{ checksum "build.gradle.kts" }}

jobs:
  build:
    executor: builder
    steps:
      - checkout
      - read_cache

      - run:
          name: Build and test
          command: ./gradlew clean check publishToIntegrationRepository --stacktrace

      - run:
          name: Integration tests with Kotlin 1.4
          command: cd gradle-plugin-integration-test && ./gradlew clean build -Dkotlin.version=1.4.32 -Dkotlin.api.version=1.4 --stacktrace

      - run:
          name: Integration tests with Kotlin 1.5
          command: cd gradle-plugin-integration-test && ./gradlew clean build -Dkotlin.version=1.5.0 -Dkotlin.api.version=1.5 --stacktrace

      - when:
          condition:
            equal: [ true, << pipeline.parameters.benchmarks >> ]
          steps:
            run:
              name: Benchmarks
              command: ./gradlew benchmarks:run

      - write_cache

      - run:
          name: Save test results
          command: |
            mkdir -p ~/test-results/junit/
            find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/test-results/junit/ \;
          when: always

      - store_test_results:
          path: ~/test-results
      - store_artifacts:
          path: ~/test-results/junit


  release:
    executor: builder
    steps:
      - checkout
      - read_cache
      - run:
          name: Publish release
          command: "./gradlew publishToRemote closeAndReleaseRepository publishPlugins -Dorg.gradle.internal.http.socketTimeout=120000 -Dorg.gradle.internal.network.retry.max.attempts=1 -Dorg.gradle.internal.publish.checksums.insecure=true"

workflows:
  version: 2.1
  build:
    jobs:
      - build
      - release:
          context: OSS
          filters:
              tags:
                only: /^\d+\.\d+\.\d+$/
              branches:
                ignore: /.*/
