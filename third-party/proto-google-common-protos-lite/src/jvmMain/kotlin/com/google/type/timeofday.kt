@file:Suppress("DEPRECATION")

// Generated by protokt version 0.12.1. Do not modify.
// Source: google/type/timeofday.proto
package com.google.type

import com.toasttab.protokt.rt.Int32
import com.toasttab.protokt.rt.KtDeserializer
import com.toasttab.protokt.rt.KtGeneratedMessage
import com.toasttab.protokt.rt.KtMessage
import com.toasttab.protokt.rt.KtMessageDeserializer
import com.toasttab.protokt.rt.KtMessageSerializer
import com.toasttab.protokt.rt.Tag
import com.toasttab.protokt.rt.UnknownFieldSet
import com.toasttab.protokt.rt.sizeof
import kotlin.Any
import kotlin.Boolean
import kotlin.Int
import kotlin.String
import kotlin.Unit

/**
 * Represents a time of day. The date and time zone are either not significant or are specified
 * elsewhere. An API may choose to allow leap seconds. Related types are
 * [google.type.Date][google.type.Date] and `google.protobuf.Timestamp`.
 */
@Deprecated("use v1")
@KtGeneratedMessage("google.type.TimeOfDay")
class TimeOfDay private constructor(
    /**
     * Hours of day in 24 hour format. Should be from 0 to 23. An API may choose to allow the value
     * "24:00:00" for scenarios like business closing time.
     */
    val hours: Int,
    /**
     * Minutes of hour of day. Must be from 0 to 59.
     */
    val minutes: Int,
    /**
     * Seconds of minutes of the time. Must normally be from 0 to 59. An API may allow the value 60
     * if it allows leap-seconds.
     */
    val seconds: Int,
    /**
     * Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
     */
    val nanos: Int,
    val unknownFields: UnknownFieldSet = UnknownFieldSet.empty(),
) : KtMessage {
    override val messageSize: Int by lazy { messageSize() }

    private fun messageSize(): Int {
        var result = 0
        if (hours != 0) {
            result += sizeof(Tag(1)) + sizeof(Int32(hours))
        }
        if (minutes != 0) {
            result += sizeof(Tag(2)) + sizeof(Int32(minutes))
        }
        if (seconds != 0) {
            result += sizeof(Tag(3)) + sizeof(Int32(seconds))
        }
        if (nanos != 0) {
            result += sizeof(Tag(4)) + sizeof(Int32(nanos))
        }
        result += unknownFields.size()
        return result
    }

    override fun serialize(serializer: KtMessageSerializer) {
        if (hours != 0) {
            serializer.write(Tag(8)).write(Int32(hours))
        }
        if (minutes != 0) {
            serializer.write(Tag(16)).write(Int32(minutes))
        }
        if (seconds != 0) {
            serializer.write(Tag(24)).write(Int32(seconds))
        }
        if (nanos != 0) {
            serializer.write(Tag(32)).write(Int32(nanos))
        }
        serializer.writeUnknown(unknownFields)
    }

    override fun equals(other: Any?): Boolean = other is TimeOfDay &&
        other.hours == hours &&
        other.minutes == minutes &&
        other.seconds == seconds &&
        other.nanos == nanos &&
        other.unknownFields == unknownFields

    override fun hashCode(): Int {
        var result = unknownFields.hashCode()
        result = 31 * result + hours.hashCode()
        result = 31 * result + minutes.hashCode()
        result = 31 * result + seconds.hashCode()
        result = 31 * result + nanos.hashCode()
        return result
    }

    override fun toString(): String = "TimeOfDay(" +
        "hours=$hours, " +
        "minutes=$minutes, " +
        "seconds=$seconds, " +
        "nanos=$nanos" +
        "${if (unknownFields.isEmpty()) "" else ", unknownFields=$unknownFields"})"

    fun copy(dsl: TimeOfDayDsl.() -> Unit): TimeOfDay = TimeOfDay.Deserializer {
        hours = this@TimeOfDay.hours
        minutes = this@TimeOfDay.minutes
        seconds = this@TimeOfDay.seconds
        nanos = this@TimeOfDay.nanos
        unknownFields = this@TimeOfDay.unknownFields
        dsl()
    }

    class TimeOfDayDsl {
        var hours: Int = 0

        var minutes: Int = 0

        var seconds: Int = 0

        var nanos: Int = 0

        var unknownFields: UnknownFieldSet = UnknownFieldSet.empty()

        fun build(): TimeOfDay = TimeOfDay(hours,
        minutes,
        seconds,
        nanos,
         unknownFields)
    }

    companion object Deserializer : KtDeserializer<TimeOfDay>,
            (TimeOfDayDsl.() -> Unit) -> TimeOfDay {
        override fun deserialize(deserializer: KtMessageDeserializer): TimeOfDay {
            var hours = 0
            var minutes = 0
            var seconds = 0
            var nanos = 0
            var unknownFields: UnknownFieldSet.Builder? = null
            while (true) {
                when(deserializer.readTag()) {
                    0 -> return TimeOfDay(hours,
                            minutes,
                            seconds,
                            nanos,
                            UnknownFieldSet.from(unknownFields))
                    8 -> hours = deserializer.readInt32()
                    16 -> minutes = deserializer.readInt32()
                    24 -> seconds = deserializer.readInt32()
                    32 -> nanos = deserializer.readInt32()
                    else -> unknownFields = (unknownFields ?:
                            UnknownFieldSet.Builder()).also {it.add(deserializer.readUnknown()) }
                }
            }
        }

        override fun invoke(dsl: TimeOfDayDsl.() -> Unit): TimeOfDay =
                TimeOfDayDsl().apply(dsl).build()
    }
}
