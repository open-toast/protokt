/*
 * Copyright (c) 2023 Toast, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

@file:Suppress("DEPRECATION")

// Generated by protokt version 0.12.1. Do not modify.
// Source: google/protobuf/wrappers.proto
package com.toasttab.protokt

import com.toasttab.protokt.rt.Bytes
import com.toasttab.protokt.rt.Int32
import com.toasttab.protokt.rt.Int64
import com.toasttab.protokt.rt.KtDeserializer
import com.toasttab.protokt.rt.KtGeneratedMessage
import com.toasttab.protokt.rt.KtMessage
import com.toasttab.protokt.rt.KtMessageDeserializer
import com.toasttab.protokt.rt.KtMessageSerializer
import com.toasttab.protokt.rt.Tag
import com.toasttab.protokt.rt.UInt32
import com.toasttab.protokt.rt.UInt64
import com.toasttab.protokt.rt.UnknownFieldSet
import com.toasttab.protokt.rt.sizeof
import kotlin.Any
import kotlin.Boolean
import kotlin.Double
import kotlin.Float
import kotlin.Int
import kotlin.Long
import kotlin.String
import kotlin.Unit

/**
 * Wrapper message for `double`.
 *
 *  The JSON representation for `DoubleValue` is JSON number.
 */
@KtGeneratedMessage("google.protobuf.DoubleValue")
class DoubleValue private constructor(
    /**
     * The double value.
     */
    val `value`: Double,
    val unknownFields: UnknownFieldSet = UnknownFieldSet.empty(),
) : KtMessage {
    override val messageSize: Int by lazy { messageSize() }

    private fun messageSize(): Int {
        var result = 0
        if (value != 0.0) {
            result += sizeof(Tag(1)) + sizeof(value)
        }
        result += unknownFields.size()
        return result
    }

    override fun serialize(serializer: KtMessageSerializer) {
        if (value != 0.0) {
            serializer.write(Tag(9)).write(value)
        }
        serializer.writeUnknown(unknownFields)
    }

    override fun equals(other: Any?): Boolean = other is DoubleValue &&
            other.value == value &&
            other.unknownFields == unknownFields

    override fun hashCode(): Int {
        var result = unknownFields.hashCode()
        result = 31 * result + value.hashCode()
        return result
    }

    override fun toString(): String = "DoubleValue(" +
            "value=$value" +
            "${if (unknownFields.isEmpty()) "" else ", unknownFields=$unknownFields"})"

    fun copy(dsl: DoubleValueDsl.() -> Unit): DoubleValue = DoubleValue.Deserializer {
        value = this@DoubleValue.value
        unknownFields = this@DoubleValue.unknownFields
        dsl()
    }

    class DoubleValueDsl {
        var `value`: Double = 0.0

        var unknownFields: UnknownFieldSet = UnknownFieldSet.empty()

        fun build(): DoubleValue = DoubleValue(value,
            unknownFields)
    }

    companion object Deserializer : KtDeserializer<DoubleValue>,
            (DoubleValueDsl.() -> Unit) -> DoubleValue {
        override fun deserialize(deserializer: KtMessageDeserializer): DoubleValue {
            var value = 0.0
            var unknownFields: UnknownFieldSet.Builder? = null
            while (true) {
                when(deserializer.readTag()) {
                    0 -> return DoubleValue(value,
                        UnknownFieldSet.from(unknownFields))
                    9 -> value = deserializer.readDouble()
                    else -> unknownFields = (unknownFields ?:
                    UnknownFieldSet.Builder()).also {it.add(deserializer.readUnknown()) }
                }
            }
        }

        override fun invoke(dsl: DoubleValueDsl.() -> Unit): DoubleValue =
            DoubleValueDsl().apply(dsl).build()
    }
}

/**
 * Wrapper message for `float`.
 *
 *  The JSON representation for `FloatValue` is JSON number.
 */
@KtGeneratedMessage("google.protobuf.FloatValue")
class FloatValue private constructor(
    /**
     * The float value.
     */
    val `value`: Float,
    val unknownFields: UnknownFieldSet = UnknownFieldSet.empty(),
) : KtMessage {
    override val messageSize: Int by lazy { messageSize() }

    private fun messageSize(): Int {
        var result = 0
        if (value != 0.0F) {
            result += sizeof(Tag(1)) + sizeof(value)
        }
        result += unknownFields.size()
        return result
    }

    override fun serialize(serializer: KtMessageSerializer) {
        if (value != 0.0F) {
            serializer.write(Tag(13)).write(value)
        }
        serializer.writeUnknown(unknownFields)
    }

    override fun equals(other: Any?): Boolean = other is FloatValue &&
            other.value == value &&
            other.unknownFields == unknownFields

    override fun hashCode(): Int {
        var result = unknownFields.hashCode()
        result = 31 * result + value.hashCode()
        return result
    }

    override fun toString(): String = "FloatValue(" +
            "value=$value" +
            "${if (unknownFields.isEmpty()) "" else ", unknownFields=$unknownFields"})"

    fun copy(dsl: FloatValueDsl.() -> Unit): FloatValue = FloatValue.Deserializer {
        value = this@FloatValue.value
        unknownFields = this@FloatValue.unknownFields
        dsl()
    }

    class FloatValueDsl {
        var `value`: Float = 0.0F

        var unknownFields: UnknownFieldSet = UnknownFieldSet.empty()

        fun build(): FloatValue = FloatValue(value,
            unknownFields)
    }

    companion object Deserializer : KtDeserializer<FloatValue>,
            (FloatValueDsl.() -> Unit) -> FloatValue {
        override fun deserialize(deserializer: KtMessageDeserializer): FloatValue {
            var value = 0.0F
            var unknownFields: UnknownFieldSet.Builder? = null
            while (true) {
                when(deserializer.readTag()) {
                    0 -> return FloatValue(value,
                        UnknownFieldSet.from(unknownFields))
                    13 -> value = deserializer.readFloat()
                    else -> unknownFields = (unknownFields ?:
                    UnknownFieldSet.Builder()).also {it.add(deserializer.readUnknown()) }
                }
            }
        }

        override fun invoke(dsl: FloatValueDsl.() -> Unit): FloatValue =
            FloatValueDsl().apply(dsl).build()
    }
}

/**
 * Wrapper message for `int64`.
 *
 *  The JSON representation for `Int64Value` is JSON string.
 */
@KtGeneratedMessage("google.protobuf.Int64Value")
class Int64Value private constructor(
    /**
     * The int64 value.
     */
    val `value`: Long,
    val unknownFields: UnknownFieldSet = UnknownFieldSet.empty(),
) : KtMessage {
    override val messageSize: Int by lazy { messageSize() }

    private fun messageSize(): Int {
        var result = 0
        if (value != 0L) {
            result += sizeof(Tag(1)) + sizeof(Int64(value))
        }
        result += unknownFields.size()
        return result
    }

    override fun serialize(serializer: KtMessageSerializer) {
        if (value != 0L) {
            serializer.write(Tag(8)).write(Int64(value))
        }
        serializer.writeUnknown(unknownFields)
    }

    override fun equals(other: Any?): Boolean = other is Int64Value &&
            other.value == value &&
            other.unknownFields == unknownFields

    override fun hashCode(): Int {
        var result = unknownFields.hashCode()
        result = 31 * result + value.hashCode()
        return result
    }

    override fun toString(): String = "Int64Value(" +
            "value=$value" +
            "${if (unknownFields.isEmpty()) "" else ", unknownFields=$unknownFields"})"

    fun copy(dsl: Int64ValueDsl.() -> Unit): Int64Value = Int64Value.Deserializer {
        value = this@Int64Value.value
        unknownFields = this@Int64Value.unknownFields
        dsl()
    }

    class Int64ValueDsl {
        var `value`: Long = 0L

        var unknownFields: UnknownFieldSet = UnknownFieldSet.empty()

        fun build(): Int64Value = Int64Value(value,
            unknownFields)
    }

    companion object Deserializer : KtDeserializer<Int64Value>,
            (Int64ValueDsl.() -> Unit) -> Int64Value {
        override fun deserialize(deserializer: KtMessageDeserializer): Int64Value {
            var value = 0L
            var unknownFields: UnknownFieldSet.Builder? = null
            while (true) {
                when(deserializer.readTag()) {
                    0 -> return Int64Value(value,
                        UnknownFieldSet.from(unknownFields))
                    8 -> value = deserializer.readInt64()
                    else -> unknownFields = (unknownFields ?:
                    UnknownFieldSet.Builder()).also {it.add(deserializer.readUnknown()) }
                }
            }
        }

        override fun invoke(dsl: Int64ValueDsl.() -> Unit): Int64Value =
            Int64ValueDsl().apply(dsl).build()
    }
}

/**
 * Wrapper message for `uint64`.
 *
 *  The JSON representation for `UInt64Value` is JSON string.
 */
@KtGeneratedMessage("google.protobuf.UInt64Value")
class UInt64Value private constructor(
    /**
     * The uint64 value.
     */
    val `value`: Long,
    val unknownFields: UnknownFieldSet = UnknownFieldSet.empty(),
) : KtMessage {
    override val messageSize: Int by lazy { messageSize() }

    private fun messageSize(): Int {
        var result = 0
        if (value != 0L) {
            result += sizeof(Tag(1)) + sizeof(UInt64(value))
        }
        result += unknownFields.size()
        return result
    }

    override fun serialize(serializer: KtMessageSerializer) {
        if (value != 0L) {
            serializer.write(Tag(8)).write(UInt64(value))
        }
        serializer.writeUnknown(unknownFields)
    }

    override fun equals(other: Any?): Boolean = other is UInt64Value &&
            other.value == value &&
            other.unknownFields == unknownFields

    override fun hashCode(): Int {
        var result = unknownFields.hashCode()
        result = 31 * result + value.hashCode()
        return result
    }

    override fun toString(): String = "UInt64Value(" +
            "value=$value" +
            "${if (unknownFields.isEmpty()) "" else ", unknownFields=$unknownFields"})"

    fun copy(dsl: UInt64ValueDsl.() -> Unit): UInt64Value = UInt64Value.Deserializer {
        value = this@UInt64Value.value
        unknownFields = this@UInt64Value.unknownFields
        dsl()
    }

    class UInt64ValueDsl {
        var `value`: Long = 0L

        var unknownFields: UnknownFieldSet = UnknownFieldSet.empty()

        fun build(): UInt64Value = UInt64Value(value,
            unknownFields)
    }

    companion object Deserializer : KtDeserializer<UInt64Value>,
            (UInt64ValueDsl.() -> Unit) -> UInt64Value {
        override fun deserialize(deserializer: KtMessageDeserializer): UInt64Value {
            var value = 0L
            var unknownFields: UnknownFieldSet.Builder? = null
            while (true) {
                when(deserializer.readTag()) {
                    0 -> return UInt64Value(value,
                        UnknownFieldSet.from(unknownFields))
                    8 -> value = deserializer.readUInt64()
                    else -> unknownFields = (unknownFields ?:
                    UnknownFieldSet.Builder()).also {it.add(deserializer.readUnknown()) }
                }
            }
        }

        override fun invoke(dsl: UInt64ValueDsl.() -> Unit): UInt64Value =
            UInt64ValueDsl().apply(dsl).build()
    }
}

/**
 * Wrapper message for `int32`.
 *
 *  The JSON representation for `Int32Value` is JSON number.
 */
@KtGeneratedMessage("google.protobuf.Int32Value")
class Int32Value private constructor(
    /**
     * The int32 value.
     */
    val `value`: Int,
    val unknownFields: UnknownFieldSet = UnknownFieldSet.empty(),
) : KtMessage {
    override val messageSize: Int by lazy { messageSize() }

    private fun messageSize(): Int {
        var result = 0
        if (value != 0) {
            result += sizeof(Tag(1)) + sizeof(Int32(value))
        }
        result += unknownFields.size()
        return result
    }

    override fun serialize(serializer: KtMessageSerializer) {
        if (value != 0) {
            serializer.write(Tag(8)).write(Int32(value))
        }
        serializer.writeUnknown(unknownFields)
    }

    override fun equals(other: Any?): Boolean = other is Int32Value &&
            other.value == value &&
            other.unknownFields == unknownFields

    override fun hashCode(): Int {
        var result = unknownFields.hashCode()
        result = 31 * result + value.hashCode()
        return result
    }

    override fun toString(): String = "Int32Value(" +
            "value=$value" +
            "${if (unknownFields.isEmpty()) "" else ", unknownFields=$unknownFields"})"

    fun copy(dsl: Int32ValueDsl.() -> Unit): Int32Value = Int32Value.Deserializer {
        value = this@Int32Value.value
        unknownFields = this@Int32Value.unknownFields
        dsl()
    }

    class Int32ValueDsl {
        var `value`: Int = 0

        var unknownFields: UnknownFieldSet = UnknownFieldSet.empty()

        fun build(): Int32Value = Int32Value(value,
            unknownFields)
    }

    companion object Deserializer : KtDeserializer<Int32Value>,
            (Int32ValueDsl.() -> Unit) -> Int32Value {
        override fun deserialize(deserializer: KtMessageDeserializer): Int32Value {
            var value = 0
            var unknownFields: UnknownFieldSet.Builder? = null
            while (true) {
                when(deserializer.readTag()) {
                    0 -> return Int32Value(value,
                        UnknownFieldSet.from(unknownFields))
                    8 -> value = deserializer.readInt32()
                    else -> unknownFields = (unknownFields ?:
                    UnknownFieldSet.Builder()).also {it.add(deserializer.readUnknown()) }
                }
            }
        }

        override fun invoke(dsl: Int32ValueDsl.() -> Unit): Int32Value =
            Int32ValueDsl().apply(dsl).build()
    }
}

/**
 * Wrapper message for `uint32`.
 *
 *  The JSON representation for `UInt32Value` is JSON number.
 */
@KtGeneratedMessage("google.protobuf.UInt32Value")
class UInt32Value private constructor(
    /**
     * The uint32 value.
     */
    val `value`: Int,
    val unknownFields: UnknownFieldSet = UnknownFieldSet.empty(),
) : KtMessage {
    override val messageSize: Int by lazy { messageSize() }

    private fun messageSize(): Int {
        var result = 0
        if (value != 0) {
            result += sizeof(Tag(1)) + sizeof(UInt32(value))
        }
        result += unknownFields.size()
        return result
    }

    override fun serialize(serializer: KtMessageSerializer) {
        if (value != 0) {
            serializer.write(Tag(8)).write(UInt32(value))
        }
        serializer.writeUnknown(unknownFields)
    }

    override fun equals(other: Any?): Boolean = other is UInt32Value &&
            other.value == value &&
            other.unknownFields == unknownFields

    override fun hashCode(): Int {
        var result = unknownFields.hashCode()
        result = 31 * result + value.hashCode()
        return result
    }

    override fun toString(): String = "UInt32Value(" +
            "value=$value" +
            "${if (unknownFields.isEmpty()) "" else ", unknownFields=$unknownFields"})"

    fun copy(dsl: UInt32ValueDsl.() -> Unit): UInt32Value = UInt32Value.Deserializer {
        value = this@UInt32Value.value
        unknownFields = this@UInt32Value.unknownFields
        dsl()
    }

    class UInt32ValueDsl {
        var `value`: Int = 0

        var unknownFields: UnknownFieldSet = UnknownFieldSet.empty()

        fun build(): UInt32Value = UInt32Value(value,
            unknownFields)
    }

    companion object Deserializer : KtDeserializer<UInt32Value>,
            (UInt32ValueDsl.() -> Unit) -> UInt32Value {
        override fun deserialize(deserializer: KtMessageDeserializer): UInt32Value {
            var value = 0
            var unknownFields: UnknownFieldSet.Builder? = null
            while (true) {
                when(deserializer.readTag()) {
                    0 -> return UInt32Value(value,
                        UnknownFieldSet.from(unknownFields))
                    8 -> value = deserializer.readUInt32()
                    else -> unknownFields = (unknownFields ?:
                    UnknownFieldSet.Builder()).also {it.add(deserializer.readUnknown()) }
                }
            }
        }

        override fun invoke(dsl: UInt32ValueDsl.() -> Unit): UInt32Value =
            UInt32ValueDsl().apply(dsl).build()
    }
}

/**
 * Wrapper message for `bool`.
 *
 *  The JSON representation for `BoolValue` is JSON `true` and `false`.
 */
@KtGeneratedMessage("google.protobuf.BoolValue")
class BoolValue private constructor(
    /**
     * The bool value.
     */
    val `value`: Boolean,
    val unknownFields: UnknownFieldSet = UnknownFieldSet.empty(),
) : KtMessage {
    override val messageSize: Int by lazy { messageSize() }

    private fun messageSize(): Int {
        var result = 0
        if (value) {
            result += sizeof(Tag(1)) + sizeof(value)
        }
        result += unknownFields.size()
        return result
    }

    override fun serialize(serializer: KtMessageSerializer) {
        if (value) {
            serializer.write(Tag(8)).write(value)
        }
        serializer.writeUnknown(unknownFields)
    }

    override fun equals(other: Any?): Boolean = other is BoolValue &&
            other.value == value &&
            other.unknownFields == unknownFields

    override fun hashCode(): Int {
        var result = unknownFields.hashCode()
        result = 31 * result + value.hashCode()
        return result
    }

    override fun toString(): String = "BoolValue(" +
            "value=$value" +
            "${if (unknownFields.isEmpty()) "" else ", unknownFields=$unknownFields"})"

    fun copy(dsl: BoolValueDsl.() -> Unit): BoolValue = BoolValue.Deserializer {
        value = this@BoolValue.value
        unknownFields = this@BoolValue.unknownFields
        dsl()
    }

    class BoolValueDsl {
        var `value`: Boolean = false

        var unknownFields: UnknownFieldSet = UnknownFieldSet.empty()

        fun build(): BoolValue = BoolValue(value,
            unknownFields)
    }

    companion object Deserializer : KtDeserializer<BoolValue>,
            (BoolValueDsl.() -> Unit) -> BoolValue {
        override fun deserialize(deserializer: KtMessageDeserializer): BoolValue {
            var value = false
            var unknownFields: UnknownFieldSet.Builder? = null
            while (true) {
                when(deserializer.readTag()) {
                    0 -> return BoolValue(value,
                        UnknownFieldSet.from(unknownFields))
                    8 -> value = deserializer.readBool()
                    else -> unknownFields = (unknownFields ?:
                    UnknownFieldSet.Builder()).also {it.add(deserializer.readUnknown()) }
                }
            }
        }

        override fun invoke(dsl: BoolValueDsl.() -> Unit): BoolValue =
            BoolValueDsl().apply(dsl).build()
    }
}

/**
 * Wrapper message for `string`.
 *
 *  The JSON representation for `StringValue` is JSON string.
 */
@KtGeneratedMessage("google.protobuf.StringValue")
class StringValue private constructor(
    /**
     * The string value.
     */
    val `value`: String,
    val unknownFields: UnknownFieldSet = UnknownFieldSet.empty(),
) : KtMessage {
    override val messageSize: Int by lazy { messageSize() }

    private fun messageSize(): Int {
        var result = 0
        if (value.isNotEmpty()) {
            result += sizeof(Tag(1)) + sizeof(value)
        }
        result += unknownFields.size()
        return result
    }

    override fun serialize(serializer: KtMessageSerializer) {
        if (value.isNotEmpty()) {
            serializer.write(Tag(10)).write(value)
        }
        serializer.writeUnknown(unknownFields)
    }

    override fun equals(other: Any?): Boolean = other is StringValue &&
            other.value == value &&
            other.unknownFields == unknownFields

    override fun hashCode(): Int {
        var result = unknownFields.hashCode()
        result = 31 * result + value.hashCode()
        return result
    }

    override fun toString(): String = "StringValue(" +
            "value=$value" +
            "${if (unknownFields.isEmpty()) "" else ", unknownFields=$unknownFields"})"

    fun copy(dsl: StringValueDsl.() -> Unit): StringValue = StringValue.Deserializer {
        value = this@StringValue.value
        unknownFields = this@StringValue.unknownFields
        dsl()
    }

    class StringValueDsl {
        var `value`: String = ""

        var unknownFields: UnknownFieldSet = UnknownFieldSet.empty()

        fun build(): StringValue = StringValue(value,
            unknownFields)
    }

    companion object Deserializer : KtDeserializer<StringValue>,
            (StringValueDsl.() -> Unit) -> StringValue {
        override fun deserialize(deserializer: KtMessageDeserializer): StringValue {
            var value = ""
            var unknownFields: UnknownFieldSet.Builder? = null
            while (true) {
                when(deserializer.readTag()) {
                    0 -> return StringValue(value,
                        UnknownFieldSet.from(unknownFields))
                    10 -> value = deserializer.readString()
                    else -> unknownFields = (unknownFields ?:
                    UnknownFieldSet.Builder()).also {it.add(deserializer.readUnknown()) }
                }
            }
        }

        override fun invoke(dsl: StringValueDsl.() -> Unit): StringValue =
            StringValueDsl().apply(dsl).build()
    }
}

/**
 * Wrapper message for `bytes`.
 *
 *  The JSON representation for `BytesValue` is JSON string.
 */
@KtGeneratedMessage("google.protobuf.BytesValue")
class BytesValue private constructor(
    /**
     * The bytes value.
     */
    val `value`: Bytes,
    val unknownFields: UnknownFieldSet = UnknownFieldSet.empty(),
) : KtMessage {
    override val messageSize: Int by lazy { messageSize() }

    private fun messageSize(): Int {
        var result = 0
        if (value.isNotEmpty()) {
            result += sizeof(Tag(1)) + sizeof(value)
        }
        result += unknownFields.size()
        return result
    }

    override fun serialize(serializer: KtMessageSerializer) {
        if (value.isNotEmpty()) {
            serializer.write(Tag(10)).write(value)
        }
        serializer.writeUnknown(unknownFields)
    }

    override fun equals(other: Any?): Boolean = other is BytesValue &&
            other.value == value &&
            other.unknownFields == unknownFields

    override fun hashCode(): Int {
        var result = unknownFields.hashCode()
        result = 31 * result + value.hashCode()
        return result
    }

    override fun toString(): String = "BytesValue(" +
            "value=$value" +
            "${if (unknownFields.isEmpty()) "" else ", unknownFields=$unknownFields"})"

    fun copy(dsl: BytesValueDsl.() -> Unit): BytesValue = BytesValue.Deserializer {
        value = this@BytesValue.value
        unknownFields = this@BytesValue.unknownFields
        dsl()
    }

    class BytesValueDsl {
        var `value`: Bytes = Bytes.empty()

        var unknownFields: UnknownFieldSet = UnknownFieldSet.empty()

        fun build(): BytesValue = BytesValue(value,
            unknownFields)
    }

    companion object Deserializer : KtDeserializer<BytesValue>,
            (BytesValueDsl.() -> Unit) -> BytesValue {
        override fun deserialize(deserializer: KtMessageDeserializer): BytesValue {
            var value = Bytes.empty()
            var unknownFields: UnknownFieldSet.Builder? = null
            while (true) {
                when(deserializer.readTag()) {
                    0 -> return BytesValue(value,
                        UnknownFieldSet.from(unknownFields))
                    10 -> value = deserializer.readBytes()
                    else -> unknownFields = (unknownFields ?:
                    UnknownFieldSet.Builder()).also {it.add(deserializer.readUnknown()) }
                }
            }
        }

        override fun invoke(dsl: BytesValueDsl.() -> Unit): BytesValue =
            BytesValueDsl().apply(dsl).build()
    }
}
